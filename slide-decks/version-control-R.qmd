---
title: "בקרת גרסאות וכלי AI למחקר ארכיאולוגי והיסטורי"
subtitle: "שילוב Git, GitHub ו-gptstudio ב-R Studio"
author: "ד״ר שי גורדין"
date: "2025-03-23"
date-format: "DD/MM/YYYY"
format:
  revealjs:
    theme: serif
    transition: slide
    slide-number: true
    chalkboard: true
    overview: true
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    code-fold: true
    code-tools: true
    code-line-numbers: true
    highlight-style: github
    code-copy: true
    footer: "שיטות מתודולוגיות ב׳ / אונ׳ אריאל"
    logo: img/archaeology-code-image.png
    rtl: true
    #css: custom.css
---

# מבוא {.section style="text-align: center"}

## מטרות השיעור {.center style="text-align: center"}

![](img/integrated-workflow.png)

::: notes
שלום לכולם! היום נלמד כיצד לשלב שני כלים חשובים למחקר ארכיאולוגי והיסטורי מודרני:

1.  בקרת גרסאות עם Git ו-GitHub - לניהול קבצים, שיתוף פעולה ותיעוד
2.  כלי AI משולבים ב-RStudio - לסיוע בניתוח נתונים ופירוש ממצאים

בסוף השיעור, תוכלו ליצור זרימת עבודה משולבת שתשפר משמעותית את המחקר שלכם.
:::

## חלק 1: בקרת גרסאות למחקר ארכיאולוגי {.smaller style="text-align: center"}

### למה בכלל צריך בקרת גרסאות? {style="text-align: right"}

-   מחקר ארכיאולוגי והיסטורי מייצר סוגים רבים של קבצים:
    -   נתונים מחפירות שדה
    -   קוד לניתוח סטטיסטי
    -   תמונות וויזואליזציות
    -   דוחות ופרסומים
    -   שכבות GIS ונתונים מרחביים
-   כל אלה מתפתחים לאורך זמן ודורשים שיתוף פעולה

::: notes
בואו נתחיל בלהבין למה בקרת גרסאות חשובה כל כך למחקר ארכיאולוגי והיסטורי. אחד האתגרים הגדולים שלנו הוא הכמות העצומה והמגוון של קבצים שאנחנו מייצרים ומנתחים. בנוסף, המחקר שלנו מתפתח לאורך זמן, ולרוב מערב שיתוף פעולה בין חוקרים ממוסדות שונים.
:::

## האתגר: ניהול קבצים מרובים {style="text-align: center"}

![](img/version-control-diagram.png)

::: notes
האתגר המרכזי הוא לנהל באופן יעיל את כל הגרסאות של הקבצים השונים. ללא מערכת מסודרת, אנחנו מוצאים את עצמנו עם עשרות קבצים בעלי שמות דומים, בלי יכולת לדעת מי השתנה, מתי ולמה.

בתרשים הזה אנחנו רואים את ההבדל בין עבודה מקומית לבין שימוש במערכת בקרת גרסאות מבוזרת כמו Git.
:::

## מהו Git? {style="text-align: center"}

-   מערכת בקרת גרסאות המנהלת את האבולוציה של קבצים
-   עוקבת אחר השינויים, מי ביצע אותם ומתי
-   שומרת את ההיסטוריה המלאה של הפרויקט
-   מאפשרת לחזור לגרסאות קודמות בקלות
-   תוכננה לעבודה מבוזרת ושיתופית

::: notes
Git היא מערכת בקרת גרסאות שפותחה במקור עבור פיתוח תוכנה, אבל היא מתאימה מאוד גם למחקר ארכיאולוגי והיסטורי. היא מאפשרת לנו לנהל באופן מובנה ומסודר את השינויים בקבצים שלנו, לתעד מי עשה מה ומתי, ולשמור את ההיסטוריה המלאה של הפרויקט. זה חשוב במיוחד במחקר ארכיאולוגי, שבו תיעוד מדויק הוא קריטי.
:::

## מהו GitHub? {style="text-align: center"}

-   פלטפורמת אירוח למאגרי Git
-   מוסיף ממשק ויזואלי נוח ל-Git
-   מקל על שיתוף פעולה בין חוקרים
-   מאפשר לנהל משימות ודיונים
-   יוצר נוכחות אינטרנטית אוטומטית לפרויקט

::: notes
GitHub משלים את Git על ידי מתן ממשק ידידותי למשתמש ופלטפורמת אירוח. זה מקל מאוד על שיתוף פעולה בין חוקרים ממוסדות שונים, מעקב אחר משימות, וניהול דיונים בנושאים שונים במחקר. בנוסף, כל פרויקט ב-GitHub מקבל אוטומטית נוכחות באינטרנט, מה שמקל על שיתוף ממצאים עם הקהילה המדעית הרחבה.
:::

## תרגיל מעשי 1: התקנה והגדרה ראשונית {.smaller .center style="text-align: center"}

### עבדו ביחד עם המרצה (סרטונים [[**בקישור הבא**]{.underline}](https://git-rfun.library.duke.edu/){target="_blank"}): {style="text-align: right"}

::: incremental
1.  פתחו חשבון GitHub
2.  התקינו Git במחשב שלכם
3.  הגדירו את שם המשתמש והדוא"ל שלכם ב-Git
4.  צרו מאגר ראשון למחקר ארכיאולוגי
:::

``` bash
## בדקו בקונסולה של הסטודיו (Console)
system("git --version")

## עברו לשורת הטרמינל (Terminal)
# התקינו git: https://git-scm.com/downloads/win
# הגדרת שם משתמש ודוא"ל
git config --global user.name "השם שלכם"
git config --global user.email "האימייל שלכם"

## יצירת מאגר חדש
git init excavation-project
cd excavation-project
```

::: notes
עכשיו בואו נתרגל את הצעדים הראשונים בעבודה עם Git ו-GitHub. אני אנחה אתכם צעד אחר צעד בתהליך ההתקנה וההגדרה הראשונית. זו התקנה חד-פעמית שתאפשר לכם להשתמש ב-Git בכל הפרויקטים העתידיים שלכם.
:::

## הגדרה של גיטהאב: {.smaller style="text-align: right"}

::: incremental
1.  התקינו את חבילת usethis
2.  הגדירו את שם המשתמש והדוא"ל שלכם ב-Github
3.  צרו טוקן לגיטהאב - זהו שלב אבטחה חיוני שתצטרכו לעשות מדי פעם
:::

``` r
# התקינו את חבילת usethis
install.packages("usethis")
library(usethis)

# הגדרת שם משתמש ודוא"ל
use_git_config(user.name = "Jane Doe", user.email = "jane@example.com")

## יצירת טוקן לגיטהאב
# Read: https://usethis.r-lib.org/articles/articles/git-credentials.html
# Read: https://usethis.r-lib.org/articles/articles/usethis-setup.html
usethis::create_github_token()  # generates a PAT token you can copy/paste in the next step.
gitcreds::gitcreds_set()  # paste the PAT from the previous step

# בדקו אם הגדרתם נכון את משתמש הגיטהאב שלכם 
# השתמשו בפונקציה הבאה אם לא: usethis::use_git_config()
gh::gh_whoami()
usethis::gh_token_help()
```

## יצירת פרויקט גיטהאב מסטודיו: {style="text-align: right"}

::: incremental
1.  הגדירו פרויקט חדש ובחרו create a git repository
2.  **התיקייה והמיקום** שלה יהיו הגיטהאב המקומי על המחשב שלכם
3.  הוסיפו קובץ Readme וקובץ רישיון
4.  התחברו לגיטהאב
:::

``` r
# צרו קובץ readme
use_readme.md()

# הוסיפו רישיון
use_ccby_license() # https://creativecommons.org/share-your-work/cclicenses/

# לפני הצעד הבא בצעו: stage & commit changes
# התחברו לגיטהאב
use_github()       
```

# חלק 2: כלי AI למחקר ארכיאולוגי ב-R Studio {.section style="text-align: center"}

## 

![](img/ai-tools-diagram.png)

::: notes
עכשיו נעבור לחלק השני של השיעור, שבו נלמד על כלי בינה מלאכותית שיכולים לסייע לנו במחקר ארכיאולוגי והיסטורי. אחד הכלים המרכזיים שנתמקד בו הוא gptstudio, שמשלב מודלי שפה גדולים כמו GPT ו-Claude ישירות בסביבת העבודה של RStudio.
:::

## מהו gptstudio? {style="text-align: center"}

-   תוסף ל-RStudio המשלב מודלי שפה גדולים (LLMs)
-   מאפשר לשאול שאלות ולקבל עזרה בזמן אמת
-   תומך במגוון ספקי AI:
    -   OpenAI (GPT-4, GPT-3.5)
    -   Anthropic (Claude)
    -   Ollama (מודלים מקומיים)
    -   ועוד רבים אחרים

::: notes
gptstudio היא חבילת R שפותחה על ידי מישל ניברד ואחרים, המאפשרת לשלב מודלי שפה גדולים ישירות בסביבת העבודה של RStudio. התוסף מאפשר לנו לשאול שאלות, לקבל עזרה בקידוד, לתקן שגיאות, ואפילו לקבל פירושים לממצאים ארכיאולוגיים - כל זאת מבלי לצאת מסביבת העבודה שלנו.
:::

## התקנת gptstudio {.smaller style="text-align: center"}

``` r
# התקנה מ-CRAN
install.packages("gptstudio")

# או, עבור הגרסה המתפתחת מ-GitHub
# install.packages("pak")
pak::pak("MichelNivard/gptstudio")
```

### הגדרת מפתח API ל-OpenAI {style="text-align: center"}

``` r
require(usethis)
edit_r_environ()

# הוסיפו את השורה הבאה ל-.Renviron
# OPENAI_API_KEY="המפתח שלכם"
```

::: notes
כדי להשתמש ב-gptstudio, צריך תחילה להתקין את החבילה ולהגדיר מפתח API לאחד משירותי הבינה המלאכותית. ברירת המחדל היא OpenAI, אבל אפשר להשתמש גם בשירותים אחרים. בואו נעבור על תהליך ההתקנה וההגדרה יחד.
:::

## תרגיל מעשי 2: שימוש ב-gptstudio {.smaller .center style="text-align: center"}

### תרגלו שימוש בצ'אט AI לניתוח ארכיאולוגי: {style="text-align: right"}

::: incremental
1.  התקינו את gptstudio
2.  פתחו את RStudio
3.  פתחו את תוסף הצ'אט: **Addins \> gptstudio \> Chat**
4.  שאלו שאלה על ניתוח נתונים ארכיאולוגיים
:::

``` r
# דוגמה לשאלה:
"מהם המבחנים הסטטיסטיים המתאימים ביותר לניתוח התפלגות של 
ממצאי חרס לפי תקופות זמן שונות באתר חפירות?"
```

::: notes
עכשיו בואו נתרגל שימוש ב-gptstudio. אחרי ההתקנה, אפשר לפתוח את תוסף הצ'אט מתפריט ה-Addins ב-RStudio. נסו לשאול שאלות שקשורות למחקר ארכיאולוגי והיסטורי, כמו שיטות ניתוח נתונים, טכניקות ויזואליזציה, או פירוש של תוצאות סטטיסטיות.
:::

## פונקציות מרכזיות ב-gptstudio {.smaller style="text-align: center"}

-   **Chat**: צ'אט עם מודל AI
-   **Chat in Source**: קבלת עזרה לקוד שנבחר
-   **Spelling and Grammar**: בדיקת איות ודקדוק בטקסט
-   **Comment your code**: הוספת הערות מפורטות לקוד

### מודלים נתמכים:

-   OpenAI (GPT-4, GPT-3.5)
-   Anthropic (Claude 3.5, Claude 2.1)
-   Ollama (מודלים מקומיים)
-   Google (Gemini)
-   ועוד...

::: notes
gptstudio מציע מספר פונקציות שימושיות למחקר ארכיאולוגי והיסטורי. הפונקציה הבסיסית ביותר היא הצ'אט, שמאפשר לשאול שאלות ולקבל תשובות. אבל יש גם פונקציות ייעודיות כמו "Chat in Source" שמאפשרת לקבל עזרה לגבי קוד ספציפי, "Spelling and Grammar" לבדיקת טקסטים, ו-"Comment your code" להוספת הערות מפורטות לקוד. החבילה תומכת במגוון רחב של מודלי AI.
:::

## תרגיל מעשי 3: ניתוח נתונים ארכיאולוגיים עם AI {.smaller .center style="text-align: center"}

### תרגלו ניתוח התפלגות ממצאים בעזרת AI: {style="text-align: center"}

``` r
# יצירת נתוני דוגמה של ממצאים ארכיאולוגיים
set.seed(123)  # לשחזוריות התוצאות

artifacts <- tibble(
  x = runif(200, 0, 10),          # קואורדינטה מזרח-מערב
  y = runif(200, 0, 10),          # קואורדינטה צפון-דרום
  period = sample(c("תקופת הברונזה", "תקופת הברזל", "התקופה ההלניסטית"), 
                 200, replace = TRUE)  # תקופה היסטורית
)

# סמנו את הקוד וכעת:
# Addins > gptstudio > Chat in Source
# בקשו: "שפר את הקוד הזה ליצירת ויזואליזציה של התפלגות הממצאים"
```

::: notes
בתרגיל הזה, נלמד להשתמש בפונקציית "Chat in Source" כדי לקבל עזרה בשיפור קוד לניתוח נתונים ארכיאולוגיים. נתחיל ביצירת מסד נתונים לדוגמה, ואז נבקש מה-AI לעזור לנו ליצור ויזואליזציה טובה יותר של הנתונים. זו דוגמה מצוינת לאיך AI יכול לסייע בעבודה היומיומית של חוקר.
:::

# חלק 3: שילוב Git/GitHub ו-AI בזרימת עבודה {.section style="text-align: center"}

## 

![](img/integrated-workflow.png)

::: notes
כעת נראה איך אפשר לשלב את שני הכלים האלה - Git/GitHub ו-AI - בזרימת עבודה אחת משולבת למחקר ארכיאולוגי והיסטורי. השילוב הזה יכול להעצים מאוד את היכולות שלנו כחוקרים.
:::

## שלבים בזרימת עבודה משולבת (חלק א׳) {.smaller style="text-align: center; margin-right: 1em; margin-left: 0"}

1.  **איסוף נתונים**
    -   תיעוד שיטות איסוף ב-Git
    -   שימוש ב-AI לניקוי וארגון נתונים
2.  **ניתוח ראשוני**
    -   כתיבת קוד בעזרת AI
    -   שמירת גרסאות בעזרת Git
3.  **ניתוח מתקדם בעזרת AI**
    -   קבלת רעיונות לניתוחים נוספים
    -   תיעוד התהליך והשינויים ב-Git

## שלבים בזרימת עבודה משולבת (חלק ב׳) {.smaller style="text-align: center; margin-right: 1em; margin-left: 0"}

4.  **שיתוף פעולה וביקורת**
    -   שיתוף הקוד והתוצאות דרך GitHub
    -   קבלת משוב וניהול שינויים
5.  **פרסום**
    -   יצירת דו"חות ופרסומים בעזרת Quarto Markdown
    -   שיתוף הפרויקט כולו דרך GitHub

::: notes
זרימת העבודה המשולבת מורכבת מחמישה שלבים עיקריים, כשבכל אחד מהם יש מקום הן לבקרת גרסאות והן לשימוש בכלי AI. זה מתחיל באיסוף נתונים, עובר דרך ניתוח ראשוני ומתקדם, שיתוף פעולה וביקורת, ומסתיים בפרסום. בכל שלב, Git מסייע לנו בתיעוד ובשיתוף, וה-AI מסייע בניתוח ובפירוש.
:::

## תרגיל מעשי 4: יצירת זרימת עבודה משולבת {.smaller .center style="text-align: center"}

### תרגלו שילוב של Git ו-AI בפרויקט ארכיאולוגי: {style="text-align: right"}

::: incremental
1.  צרו מאגר Git חדש לפרויקט ארכיאולוגי
2.  הוסיפו קובץ Quarto Markdown לניתוח נתונים
3.  השתמשו ב-gptstudio לשיפור הקוד והניתוח
4.  בצעו commit לשינויים עם הסבר מפורט
5.  דחפו את השינויים ל-GitHub
6.  שתפו את הקישור עם עמית ובקשו משוב
:::

``` bash
git add analysis.qmd
git commit -m "הוספתי ניתוח מרחבי של ממצאי תקופת הברונזה בעזרת AI"
git push origin main
```

::: notes
בתרגיל הזה, נשלב את כל מה שלמדנו עד כה ליצירת זרימת עבודה משולבת לפרויקט ארכיאולוגי. נתחיל ביצירת מאגר Git, נוסיף קובץ R Markdown לניתוח נתונים, נשתמש ב-gptstudio לשיפור הקוד, נבצע commit לשינויים, נדחוף אותם ל-GitHub, ונשתף את הפרויקט עם עמית לקבלת משוב. זה תרגיל מקיף שמדגים את הערך של שילוב הכלים האלה.
:::

## שאלות אתיות בשימוש ב-AI במחקר {.smaller style="text-align: center"}

-   **פרטיות נתונים**: האם הנתונים ששולחים ל-AI רגישים?
-   **שקיפות**: כיצד לתעד את השימוש ב-AI במחקר?
-   **דיוק**: כיצד לוודא את נכונות התוצאות והניתוחים?
-   **קרדיט**: כיצד לתת קרדיט נאות לכלי AI במחקר?
-   **הטיות**: האם ישנן הטיות במודלים שעלולות להשפיע על המחקר?

::: notes
חשוב לדון גם בשאלות האתיות שעולות משימוש בכלי AI במחקר ארכיאולוגי והיסטורי. אלה כוללות שאלות על פרטיות נתונים, שקיפות בתיעוד השימוש ב-AI, דיוק התוצאות, מתן קרדיט נאות, והתמודדות עם הטיות אפשריות במודלים. כחוקרים, עלינו להתייחס לשאלות אלה ברצינות ולפתח פרקטיקות עבודה אתיות.
:::

## תרגיל מעשי 5: תיעוד אתי של שימוש ב-AI {.smaller .center style="text-align: center"}

### תרגלו תיעוד נאות של שימוש ב-AI במחקר: {style="text-align: right"}

::: incremental
1.  פתחו קובץ README.md בפרויקט שלכם
2.  הוסיפו סעיף על שיטות המחקר
3.  תעדו במפורט את השימוש בכלי AI
4.  ציינו אילו חלקים מהניתוח נעשו בעזרת AI
5.  תארו את התהליך של בדיקת התוצאות
:::

``` markdown
## שיטות מחקר

בניתוח הממצאים השתמשנו בכלים הבאים:
- ניתוח סטטיסטי באמצעות R (גרסה 4.2.0)
- בקרת גרסאות באמצעות Git ו-GitHub
- סיוע בכתיבת קוד וניתוח באמצעות gptstudio (גרסה 0.3.0) 
  המשתמש במודל GPT-4 של OpenAI

כל התוצאות שהתקבלו באמצעות AI נבדקו ואומתו באופן ידני.
```

::: notes
בתרגיל האחרון שלנו, נתמקד בתיעוד אתי ושקוף של השימוש בכלי AI במחקר. נפתח את קובץ README.md בפרויקט ונוסיף סעיף מפורט על שיטות המחקר, כולל תיעוד מדויק של השימוש בכלי AI. תיעוד כזה חשוב לשקיפות ולשחזוריות המחקר, ומהווה פרקטיקה מומלצת בקהילה המדעית.
:::

## סיכום: יתרונות הגישה המשולבת {.smaller style="text-align: center"}

-   **שיפור השחזוריות**: תיעוד מלא של כל שלבי המחקר
-   **יעילות**: חיסכון בזמן באמצעות כלי AI
-   **שיתוף פעולה**: עבודה יעילה יותר בצוותי מחקר
-   **שקיפות**: פרסום הקוד, הנתונים והניתוח
-   **חדשנות**: גישות ניתוח חדשות בעזרת AI
-   **למידה**: שיפור מתמיד באמצעות משוב ושיתוף

::: notes
לסיכום, שילוב של בקרת גרסאות וכלי AI במחקר ארכיאולוגי והיסטורי מציע יתרונות רבים: שיפור השחזוריות של המחקר, יעילות מוגברת, שיתוף פעולה טוב יותר, שקיפות מלאה, אפשרויות לחדשנות מתודולוגית, והזדמנויות ללמידה מתמדת. אימוץ הגישה המשולבת הזו יכול לשדרג משמעותית את המחקר שלכם.
:::

## משאבים נוספים ללמידה {.smaller style="text-align: center"}

-   **Git & GitHub**:
    -   [Happy Git with R](https://happygitwithr.com/) מאת ג'ניפר בריאן
    -   [Pro Git](https://git-scm.com/book/en/v2) - ספר חינמי ומקיף
-   **gptstudio ו-AI ב-R**:
    -   [אתר gptstudio](https://michelnivard.github.io/gptstudio/)
    -   [gpttools](https://jameshwade.github.io/gpttools/) - חבילה משלימה
-   **מדריכים לשילוב הכלים במחקר ארכיאולוגי**:
    -   [rrtools: Tools for Writing Reproducible Research in R](https://github.com/benmarwick/rrtools)
    -   Batist, Z. and Roe, J. 2024. 'Open Archaeology, Open Source? Collaborative practices in an emerging community of archaeological software engineers'. *Internet Archaeology* 67. <https://doi.org/10.11141/ia.67.13>

::: notes
לפני שנסיים, הנה כמה משאבים מומלצים ללמידה נוספת. עבור Git ו-GitHub, אני ממליץ במיוחד על "Happy Git with R" מאת ג'ניפר בריאן, שמתמקד בשימוש ב-Git עם R. עבור gptstudio ו-AI ב-R, האתר הרשמי של gptstudio הוא מקור מצוין, וכך גם החבילה המשלימה gpttools. ישנם גם מדריכים מצוינים לשילוב כלים אלה במחקר ארכיאולוגי.
:::

## שאלות? {style="text-align: center"}

![](img/integrated-workflow.png)

::: notes
תודה רבה על ההשתתפות בשיעור היום! אני מקווה שהצלחתם לקבל תמונה ברורה של איך שילוב של בקרת גרסאות וכלי AI יכול לשדרג את המחקר הארכיאולוגי וההיסטורי שלכם. יש לכם שאלות?
:::
