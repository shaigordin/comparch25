install.packages("gptstudio")
require(usethis)
edit_r_environ()
install.packages("chatgpt")
library(chatgpt)
install.packages("shiny")
install.packages("promises")
install.packages("promises")
install.packages("promises")
install.packages("promises", type = "source", configure.args = "--with-mac-deployment-target=10.13")
install.packages("promises")
install.packages("promises")
install.packages("gptstudio")
require(usethis)
edit_r_environ()
library(chatgpt)
gptstudio:::gptstudio_chat()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
install.packages(c("shiny", "httr2", "rlang"))
install.packages(c("shiny", "httr2", "rlang"))
gptstudio::gpt_set_key("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")
remotes::install_github("MichelNivard/gptstudio")
gptstudio:::gptstudio_chat()
library(gptstudio)
gptstudio:::gptstudio_chat()
chatgpt:::run_addin_ask_chatgpt()
gptstudio:::gptstudio_chat()
install.packages("pak")
install.packages("pak")
require(usethis)
edit_r_environ()
gptstudio:::gptstudio_chat()
library(shiny)
library(promises)
library(gptstudio)
gptstudio:::gptstudio_chat()
require(usethis)
edit_r_environ()
install.packages("gptstudio")
require(usethis)
edit_r_environ()
require(usethis)
edit_r_environ()
install.packages("gptstudio")
install.packages("usethis")
require(usethis)
edit_r_environ()
